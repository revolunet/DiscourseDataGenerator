#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var request = require("request");
var program = require("commander");
var threadSleep = require('thread-sleep');
var targetUrl;
program
    .version("v" + require('../package.json').version)
    .description('A tool to auto generate data in discourse')
    .option('--username [value]', 'Api user name')
    .option('--apikey [value]', 'Api key')
    .option('--title [value]', 'title of a topic.', 'Topic from data generator')
    .option('--content [value]', 'content of a topic.', 'This message is autogenerated.')
    .option('--count [value]', 'how many time it runs.')
    .arguments('<targetSite>')
    .action(function (targetSite) {
    targetUrl = targetSite;
})
    .parse(process.argv);
if (!targetUrl || !program.username || !program.apikey) {
    console.log('Error: must specify target_site, api_username and api_key');
    program.help();
}
var count = 1;
if (program.count) {
    try {
        count = parseInt(program.count, 10);
    }
    catch (e) { }
}
var data = {
    api_key: program.apikey,
    api_username: program.username,
    title: program.title,
    raw: program.content
};
var title = program.title;
fireRequest(data, title, count);
function sleep() {
    var sleepSeconds = 60;
    console.log("Sleep for " + sleepSeconds + " seconds.");
    threadSleep(sleepSeconds / 1000);
}
function fireRequest(data, title, count) {
    if (count > 1) {
        data.title = title + " " + count;
    }
    else {
        data.title = title;
    }
    try {
        request.post({
            url: "http://" + targetUrl + "/posts",
            formData: data
        }, function (err, httpResponse, body) {
            if (err) {
                console.error(count + ': Upload failed:', err);
            }
            try {
                body = JSON.parse(body);
                if (!body.errors) {
                    console.log(count + ': Upload successful!  Server responded with:', body);
                }
                else {
                    console.error(count + ': Upload failed:', body.errors);
                    if (body.errors.indexOf('daily limit') >= 0) {
                        throw 'reach api limit';
                    }
                }
                if (count > 1) {
                    fireRequest(data, title, count - 1);
                }
            }
            catch (e) {
                console.log("Error happen: " + e);
                sleep();
                fireRequest(data, title, count);
            }
        });
    }
    catch (e) {
        console.log("Error happen: " + e);
        sleep();
        fireRequest(data, title, count);
    }
}
